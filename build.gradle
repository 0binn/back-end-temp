plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.diffplug.spotless' version '6.11.0'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10' // querydsl
}

group = 'com.real-time'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath //querydsl
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    testImplementation 'org.springframework.security:spring-security-test'

	// Spring Boot Starter
	testImplementation ('org.springframework.boot:spring-boot-starter-test')

	// Security
//	implementation 'org.springframework.boot:spring-boot-starter-security' // 401error 조사
//	implementation ('org.springframework.security:spring-security-crypto:5.7.8')

	// Lombok
	implementation ('org.projectlombok:lombok')
	compileOnly ('org.projectlombok:lombok:1.18.24')
	annotationProcessor ('org.projectlombok:lombok:1.18.24')

	// DB
	runtimeOnly ('mysql:mysql-connector-java:8.0.31') //mysql8
	implementation ('org.springframework.boot:spring-boot-starter-jdbc')
	implementation ('org.springframework.boot:spring-boot-starter-data-jpa')

	// querydsl
	implementation "com.querydsl:querydsl-jpa:5.0.0"
	implementation "com.querydsl:querydsl-apt:5.0.0"
	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// Web
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter')

	// Validation
	implementation('org.springframework.boot:spring-boot-starter-validation')

	// Swagger
	implementation ('org.springdoc:springdoc-openapi-ui:1.6.14')

	// s3
	implementation 'com.amazonaws:aws-java-sdk-s3control:1.12.372'

	// Use ConfigurationProperties
	annotationProcessor ('org.springframework.boot:spring-boot-configuration-processor')
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	java {
		target("**/*.java")

		// import 순서
		importOrder 'java', 'javax', 'org', 'com', ''

		// 미사용 import 제거
		removeUnusedImports()

		googleJavaFormat().aosp()

		// 간격
		indentWithSpaces(4)

		// 공백 제거
		trimTrailingWhitespace()

		// 끝부분 NewLine
		endWithNewline()
	}
}

// querydsl setup
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
